---
import { Effect, Option } from "effect";

import { Git, runWithAstro } from "~/services/Git";

/* Init */
interface Props {
  repository: string;
  commit: string;
}

const { repository, commit } = Astro.props;

const git = Effect.serviceMembers(Git);

/* Data */
const commitInDetail = await git.functions
  .getCommitInDetail(repository, commit)
  .pipe(runWithAstro);
---

<div class="flex flex-col gap-1 p-2 w-full overflow-x-scroll">
  <p>Author: {commitInDetail.author} &lt;{commitInDetail.authorEmail}&gt;</p>
  <p>
    Committer: {commitInDetail.committer} &lt;{
      commitInDetail.committerEmail
    }&gt;
  </p>
  {
    commitInDetail.signer.pipe(
      Option.map((signer) => <p>Signer: {signer}</p>),
      Option.getOrNull,
    )
  }
  {
    commitInDetail.signatureKey.pipe(
      Option.map((signatureKey) => (
        <p>
          Signature Key: <span class="break-all">{signatureKey}</span>
        </p>
      )),
      Option.getOrNull,
    )
  }
  <p>Subject: {commitInDetail.subject}</p>
</div>
